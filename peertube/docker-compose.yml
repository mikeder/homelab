version: "3.3"

services:
  peertube:
    image: chocobozzz/peertube:production-bullseye
    # Use a static IP for this container because nginx does not handle proxy host change without reload
    # This container could be restarted on crash or until the postgresql database is ready for connection
    networks:
      proxy:
        ipv4_address: 172.19.0.42
    labels:
      # enable traefik ingress
      - traefik.enable=true
      - traefik.http.services.peertube.loadbalancer.server.port=9000

      # http web ui
      - traefik.http.routers.navidrome-http.entrypoints=http
      - traefik.http.routers.navidrome-http.rule=Host(`peertube.sqweeb.net`)
      - traefik.http.routers.navidrome-http.middlewares=redirect-https # redirect http to https

      # https web ui
      - traefik.http.routers.navidrome-https.tls=true
      - traefik.http.routers.navidrome-https.entrypoints=https
      - traefik.http.routers.navidrome-https.tls.certresolver=letsencrypt
      - traefik.http.routers.navidrome-https.rule=Host(`peertube.sqweeb.net`)
    env_file:
      - .env
    ports:
      - "1935:1935" # Comment if you don't want to use the live feature
      - "9000:9000" # Uncomment if you use another webserver/proxy or test PeerTube in local, otherwise not suitable for production
    volumes:
      - assets:/app/client/dist
      - ./docker-volume/data:/data
      - ./docker-volume/config:/config
    depends_on:
      - postgres
      - redis
      - postfix
    restart: "always"

  postgres:
    image: postgres:13-alpine
    networks:
      - proxy
    env_file:
      - .env
    volumes:
      - ./docker-volume/db:/var/lib/postgresql/data
    restart: "always"

  redis:
    image: redis:6-alpine
    networks:
      - proxy
    volumes:
      - ./docker-volume/redis:/data
    restart: "always"

  postfix:
    image: mwader/postfix-relay
    networks:
      - proxy
    env_file:
      - .env
    volumes:
      - ./docker-volume/opendkim/keys:/etc/opendkim/keys
    restart: "always"

networks:
  proxy:
    external: true

volumes:
  assets:
